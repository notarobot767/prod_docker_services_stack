input {
  #https://www.elastic.co/guide/en/logstash/current/plugins-inputs-syslog.html
  beats {
    port => 514
    type => "syslog"
  }
}

filter {
  #Cisco Syslog
  ##########################
  if [service] == "cisco-syslog" {
    grok {
      patterns_dir => ["/usr/share/logstash/pipeline/patterns"]

      #cisco syslog
      match => { "message" => '<%{NUMBER}>%{NUMBER}: \[%{NOTSPACE:facility} s_sn="%{NUMBER:seq_no}" s_id ="%{HOSTNAME:hostname}:%{NUMBER:syslog_port}"]: \*?%{SYSLOG_YEAR:timestamp}: %%{FACILITY_SEVERITY_CODE}: %{GREEDYDATA:syslog_msg}' }
      
      #basic syslog
      match => { "message" => "%{SYSLOGTIMESTAMP}%{GREEDYDATA:syslog_message}" }

      #Else
      match => { "message" => "%{GREEDYDATA:syslog_message}" }
      
      add_field => [ "received_at", "%{@timestamp}" ]
    }
  }

  #tftp server logs
  ##########################
  if [service] == "tftp" {
    grok {
      patterns_dir => ["/usr/share/logstash/pipeline/patterns"]

      #file read/write
      match => { "message" => "%{SYSLOGTIMESTAMP} tftp %{WORD:SOURCE}.%{LOGLEVEL:LOGLEVEL} in.tftpd\[%{NUMBER}\]: %{WORD:OP} from %{IP:SRC_IP} filename %{FILE:FILE}" }
      
      #basic syslog
      match => { "message" => "%{SYSLOGTIMESTAMP} tftp %{WORD:SOURCE}.%{LOGLEVEL:LOGLEVEL} %{GREEDYDATA:SYSLOG_MSG}" }

      #Else
      match => { "message" => "%{GREEDYDATA:syslog_message}" }
      
      add_field => [ "received_at", "%{@timestamp}" ]
    }
  }
  
  #endlessh logs
  ##########################
  if [service] == "endlessh" {
    grok {
      patterns_dir => ["/usr/share/logstash/pipeline/patterns"]

      #accept statements
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp_hst}%{SPACE}%{TIMESTAMP_ISO8601:timestamp_zulu}%{SPACE}%{WORD:method}%{SPACE}host=::ffff:%{IP:address}%{SPACE}port=%{NUMBER:port}%{SPACE}fd=%{NUMBER:fd}%{SPACE}time=%{NUMBER:duration}%{SPACE}bytes=%{NUMBER:bytes}%{GREEDYDATA}" }
      
      #close statements
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp_hst}%{SPACE}%{TIMESTAMP_ISO8601:timestamp_zulu}%{SPACE}%{WORD:method}%{SPACE}host=::ffff:%{IP:address}%{SPACE}port=%{NUMBER:port}%{SPACE}fd=%{NUMBER:fd}%{SPACE}%{GREEDYDATA}" }
      
      add_field => [ "received_at", "%{@timestamp}" ]
    }
  }

  #bind9 logs
  ##########################
  if [service] == "bind9" {
    grok {
      patterns_dir => ["/usr/share/logstash/pipeline/patterns"]

      #query
      match => { "message" => "%{BIND9_TIMESTAMP:timestamp_hst} %{WORD:category}: %{LOGLEVEL:severity}: client @%{NOTSPACE:client} %{IP:src_ip}#%{NUMBER:src_port} %{NOTSPACE} query: %{NOTSPACE:query} IN %{WORD:record} (%{NOTSPACE:flags} )?\(%{IP:srv_ip}\)" }
      
      #every else that's not a query
      match => { "message" => "%{BIND9_TIMESTAMP:timestamp_hst} %{WORD:category}: %{LOGLEVEL:severity}: %{GREEDYDATA:syslog_message}" }

      #all else
      match => { "message" => "%{GREEDYDATA:syslog_message}" }
      
      add_field => [ "received_at", "%{@timestamp}" ]
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[type]}-%{+YYYY.MM.dd}"
    action => "create"
  }
  stdout {
    codec => rubydebug
  }
}