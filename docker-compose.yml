version: "3.9"
services:
  code-server:
    container_name: prod_code-server
    hostname: code-server
    networks:
      - servers
    image: ghcr.io/linuxserver/code-server:latest
      #https://hub.docker.com/r/linuxserver/code-server
    environment:
      - TZ=$TZ
      - PUID=$ID
      - PGID=$ID
      #- PASSWORD=$CS_PW
    ports:
      - $SRV_IP_1:9080:8443
    volumes:
       - $CS_CONFIG_DIR:/config
       #- $CS_USER_DATA_DIR:/cs
       #- $ROOT_DIR:/docker
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1g
  ns1:
    container_name: prod_ns1
    hostname: ns1
    networks:
      - servers
    build:
      context: ./app/bind9
    volumes:
      - $DNS_LOG_DIR:/app/log
    ports:
      - $SRV_IP_1:53:53
      - $SRV_IP_1:53:53/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
  ns2:
    container_name: prod_ns2
    hostname: ns2
    networks:
      - servers
    build:
      context: ./app/bind9
    #volumes:
    #  - $DNS_LOG_DIR:/app/log
    ports:
      - $SRV_IP_2:53:53
      - $SRV_IP_2:53:53/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
  ntp-a:
    container_name: prod_ntp-a
    hostname: ntp-a
    networks:
      - servers
    build:
      context: ./app/ntp/ntp-a
    ports:
      - $SRV_IP_1:123:123/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  ntp-b:
    container_name: prod_ntp-b
    hostname: ntp-b
    networks:
      - servers
    build:
      context: ./app/ntp/ntp-b
    ports:
      - $SRV_IP_2:123:123/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  elastic:
    entrypoint: ["/bin/bash"]
      #comment to disable
    container_name: prod_elastic
    hostname: elastic
    networks:
      - servers
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
      #https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
        #set no more than half of allocated memory
        #https://www.elastic.co/guide/en/elasticsearch/reference/current/advanced-configuration.html#set-jvm-options
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - $ELASTIC_DATA_DIR:/usr/share/elasticsearch/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8g
  logstash:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - elastic
    container_name: prod_logstash
    hostname: logstash
    networks:
      - servers
    build:
      context: ./app/elk/logstash
    volumes:
      - ${LOGSTASH_DATA_DIR}:/usr/share/logstash/data
    #ports:
    #  - $SRV_IP_1:$LOGSTASH_H_PORT:$LOGSTASH_C_PORT/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 3g
  kibana:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - elastic
    container_name: prod_kibana
    hostname: kibana
    networks:
      - servers
      - swag
    build:
      context: ./app/elk/kibana
    volumes:
      - ${KIBANA_DATA_DIR}:/usr/share/kibana/data
    ports:
      - $SRV_SWAG_PROXY:$KIBANA_H_PORT:5601
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1g
  fb_dns:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - logstash
    container_name: prod_fb_dns
    hostname: fb_dns
    networks:
      - servers
    build:
      context: ./app/elk/filebeat/dns
      #may have to restrict fb.yml to read only on host
    volumes:
      - $FB_DNS_DATA_DIR:/usr/share/filebeat/data
      - $DNS_LOG_DIR:/app/log:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  fb_freeradius:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - logstash
    container_name: prod_fb_freeradius
    hostname: fb_freeradius
    networks:
      - servers
    build:
      context: ./app/elk/filebeat/freeradius
      #may have to restrict fb.yml to read only on host
    volumes:
      - $FB_FREERADIUS_DATA_DIR:/usr/share/filebeat/data
      - $RAD_LOG_DIR:/app/log:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  fb_netflow:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - elastic
    container_name: prod_fb_netflow
    hostname: fb_netflow
    networks:
      - servers
    build:
      context: ./app/elk/filebeat/netflow
      #may have to restrict fb.yml to read only on host
    #ports:
    #  - $SRV_IP_1:$FB_NETFLOW_PORT:$FB_NETFLOW_PORT/udp
    #volumes:
    #  - $FB_NETFLOW_DATA_DIR:/usr/share/filebeat/data
    #restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  fb_nginx:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - elastic
    container_name: prod_fb_nginx
    hostname: fb_nginx
    networks:
      - servers
    build:
      context: ./app/elk/filebeat/nginx
      #may have to restrict fb.yml to read only on host
    volumes:
      - $FB_NGINX_DATA_DIR:/usr/share/filebeat/data
      #- $RPROXY_LOG_DIR:/app/log:ro
    #restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  radius_db:
    entrypoint: ["/bin/bash"]
      #comment to disable
    container_name: prod_radius_db
    hostname: radius_db
    networks:
      - servers
    build:
      context: ./app/freeradius/radius_db
    environment:
      MYSQL_ROOT_PASSWORD: $RADIUS_SQL_ROOT_PW
      #change this before deployment
      #also change default pws in
        #./app/radius_db/docker-entrypoint-initdb.d/01_create_db_add_user.sql
        #./app/daloradius/daloradius.conf.php
    volumes:
      - $RADIUS_DB_DIR:/var/lib/mysql
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  radius_srv:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - radius_db
    container_name: prod_radius_srv
    hostname: radius_srv
    networks:
      - servers
    build:
      context: ./app/freeradius/radius_srv
    ports:
      - $SRV_IP_1:1812-1813:1812-1813/udp
    volumes:
      - $RAD_LOG_DIR:/var/log/freeradius
    #command: ["freeradius", "-X"]
    #use to troubleshoot
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  daloradius:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - radius_db
    container_name: prod_daloradius
    hostname: daloradius
    networks:
      - servers
      - swag
    build:
      context: ./app/freeradius/daloradius
    ports:
      - $SRV_SWAG_PROXY:$DALORADIUS_H_PORT:80
    volumes:
      - $RAD_LOG_DIR:/var/log/freeradius:ro
      #chmod +r /disk2/freeradius_srv/radius.log
      #run on host machine
      #may be necessary to ensure daloradius container has read rights to log file
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  nagios:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - swag
    container_name: prod_nagios
    hostname: nagios
    networks:
      - swag
    build:
      context: ./app/nagios
    environment:
      - NAGIOSADMIN=cisco
    ports:
      - $SRV_SWAG_PROXY:$NAGIOS_H_PORT:80
    volumes:
      - $NAGIOS_TMP_DIR:/app/tmp
        #for easily writing data back to host
    #restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1g
  www:
    depends_on:
      - swag
    container_name: prod_www
    hostname: www
    networks:
      - swag
    build:
      context: ./app/www
    ports:
      - $SRV_SWAG_PROXY:$WWW_H_PORT:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512m
  rocket_db:
    entrypoint: ["/bin/bash"]
      #comment to disable
    container_name: prod_rocket_db
    hostname: rocket_db
    networks:
      - servers
    image: mongo:4.0
    restart: unless-stopped
    command: mongod --smallfiles --oplogSize 128 --replSet rs0
    labels:
      - "traefik.enable=false"
    volumes:
      - $ROCKET_DB_DIR:/data/db
      #datastore
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1g
  #run once and then comment it out to avoid accidently deleting data 
  rocket-mongo-init-replica:
    image: mongo:4.0
    networks:
      - servers
    entrypoint: ["/bin/bash"]
    #command: 'mongo rocket_db/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
    depends_on:
      - rocket_db
  rocket_chat:
    entrypoint: ["/bin/bash"]
      #comment to disable
    depends_on:
      - rocket_db
    container_name: prod_rocket_chat
    hostname: rocket_chat
    networks:
      - servers
      - swag
    image: rocketchat/rocket.chat:latest
    labels:
      - "traefik.backend=rocketchat"
      - "traefik.frontend.rule=Host: $ROCKET_ROOT_URL"
    restart: unless-stopped
    ports:
      - $SRV_SWAG_PROXY:$ROCKET_H_PORT:3000
    environment:
      - PORT=3000
      - ROOT_URL=https://$ROCKET_ROOT_URL
      - MONGO_OPLOG_URL=mongodb://rocket_db:27017/local
      - MONGO_URL=mongodb://rocket_db:27017/rocketchat
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
  devbox:
    container_name: prod_devbox
    hostname: devbox
    networks:
      - servers
    build:
      context: ./app/devbox
    ports:
      - $SRV_IP_1:2013:22
    environment:
      - USER=testuser
      #- SSH_KEY=""
    volumes:
      - $DEVBOX_DATA_DIR:/app
    deploy:
      resources:
        limits:
          memory: 512m
  swag:
    container_name: prod_swag
    hostname: swag
    networks:
      - swag
    image: ghcr.io/linuxserver/swag:latest
      #https://hub.docker.com/r/linuxserver/swag
    environment:
      - TZ=$TZ
      - PUID=$ID
      - PGID=$ID
      - URL=$SWAG_URL
      - SUBDOMAINS=$SWAG_SUBDOMAINS
      - VALIDATION=http
      - EMAIL=$EMAIL
      - ONLY_SUBDOMAINS=false
      - EXTRA_DOMAINS=$SWAG_EXTRA_DOMAINS
      - STAGING=false
    ports:
      - $SRV_IP_1:80:80
      - $SRV_IPV6_1:80:80
      - $SRV_IPV6_WAN:80:80
      - $SRV_IP_1:443:443
      - $SRV_IPV6_1:443:443
      - $SRV_IPV6_WAN:443:443
    volumes:
      - $SWAG_CONFIG_DIR:/config
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4g
  plex:
    depends_on:
      - swag
    container_name: prod_plex
    hostname: plex
    networks:
      - plex
    devices:
      - $GPU_DEV:$GPU_DEV
    image: ghcr.io/linuxserver/plex:latest
      #https://hub.docker.com/r/linuxserver/plex
    networks:
      - servers
      - swag
    environment:
      - VERSION=$PLEX_VERSION
      - TZ=$TZ
      - PUID=$ID
      - PGID=$ID
    ports:
      - $SRV_SWAG_PROXY:$PLEX_H_PORT:32400
    volumes:
      - $PLEX_CONFIG_DIR:/config
      - $PLEX_MEDIA_DIR:/media
      - $RAMDISK:/transcode
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 16g
  plexstats:
    depends_on:
      - plex
      - swag
    container_name: prod_plexstats
    hostname: plexstats
    networks:
      - servers
      - swag
    image: ghcr.io/linuxserver/tautulli:latest
      #https://hub.docker.com/r/linuxserver/tautulli
    environment:
      - TZ=$TZ
      - PUID=$ID
      - PGID=$ID
    ports:
      - $SRV_SWAG_PROXY:$PLEXSTATS_H_PORT:8181
    volumes:
      - $PLEXSTATS_CONFIG_DIR:/config
      - $PLEX_CONFIG_DIR:/plex:ro
        #to read plex logs
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512m
  guacd:
    container_name: prod_guacd
    hostname: guacd
    networks:
      - servers
    #image: ghcr.io/linuxserver/guacd:latest
    image: guacamole/guacd
      #https://hub.docker.com/r/guacamole/guacd
    restart: unless-stopped
    #deploy:
    #  resources:
    #    limits:
    #      memory: 512m
  guac_db:
    container_name: prod_guac_db
    hostname: guac_db
    networks:
      - servers
    build:
      context: ./app/guac_db
    environment:
      MYSQL_ROOT_PASSWORD: $GUAC_SQL_ROOT_PW
      #change this before deployment
      #also change default pws in
        #./app/guac_db/docker-entrypoint-initdb.d/002-create-admin-user.sql
    volumes:
      - $GUAC_DB_DIR:/var/lib/mysql
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512m
  guac:
    depends_on:
      - guacd
      - guac_db
    container_name: prod_guac
    hostname: guac
    networks:
      - servers
      - swag
    image: guacamole/guacamole:latest
      #https://hub.docker.com/r/guacamole/guacamole
    environment:
      - GUACD_HOSTNAME=guacd
      - MYSQL_HOSTNAME=guac_db
      - MYSQL_DATABASE=$GUAC_DB
      - MYSQL_USER=$GUAC_DB_USER
      - MYSQL_PASSWORD=$GUAC_DB_PW
      - TOTP_ENABLED=true
    ports:
      - 9080:8080
      - $SRV_SWAG_PROXY:$GUAC_H_PORT:8080
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1g
  wireguard:
    restart: unless-stopped
    entrypoint: ["/bin/bash"]
      #comment to disable
    network_mode: host
    container_name: prod_wireguard
    #hostname: wireguard
    #networks:
    #  - swag
    image: ghcr.io/linuxserver/wireguard:latest
      #https://hub.docker.com/r/linuxserver/wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    privileged: true
    environment:
      - TZ=$TZ
      - PUID=$ID
      - PGID=$ID
      - SERVERURL=$WG_SERVERURL
      #- ALLOWEDIPS=0.0.0.0/0
    volumes:
      - $WG_CONFIG_DIR:/config
      - /lib/modules
    #sysctls:
    #  - net.ipv4.conf.all.src_valid_mark=1
    #  - net.ipv6.conf.all.disable_ipv6=0
    #ports:
    #  - 51820:51820/udp
    #deploy:
    #  resources:
    #    limits:
    #      memory: 4g
  download:
    container_name: prod_download
    hostname: download
    networks:
      - servers
      - swag
    image: ghcr.io/linuxserver/qbittorrent:latest
      #https://hub.docker.com/r/linuxserver/qbittorrent
    environment:
      - TZ=$TZ
      - PUID=$ID
      - PGID=$ID
    ports:
      - $SRV_SWAG_PROXY:$DOWNLOAD_H_PORT:8080
    volumes:
      - $DOWNLOADS_DATA_DIR:/config
      - $DOWNLOADS_DIR:/downloads
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4g
  rdesktop:
    entrypoint: ["/bin/bash"]
      #comment to disable
    container_name: prod_rdesktop
    hostname: rdesktop
    networks:
      - servers
    image: ghcr.io/linuxserver/rdesktop:latest
    privileged: true
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=$TZ
    volumes:
      #- /var/run/docker.sock:/var/run/docker.sock
      - $RDESKTOP_CONFIG_DIR:/config
    ports:
      - $SRV_IP_1:3389:3389
    shm_size: "2gb"
    restart: unless-stopped
  radius_proxy:
    entrypoint: ["/bin/bash"]
    depends_on:
      - radius_srv
    container_name: prod_radius_proxy
    hostname: radius_proxy
    networks:
      - servers
      - swag
    build:
      context: ./app/freeradius/proxy 
    shm_size: "2gb"
    restart: unless-stopped
  rproxy:
    entrypoint: ["/bin/bash"]
      #comment to disable
    container_name: prod_rproxy
    hostname: rproxy
    networks:
      - servers
    build:
      context: ./app/rproxy
    ports:
      - 9090:80
    shm_size: "2gb"
    restart: unless-stopped
  nessus:
    container_name: prod_nessus
    hostname: nessus
    networks:
      - servers
    image: tenableofficial/nessus
    ports:
      - 8834:8834
    environment:
      - ACTIVATION_CODE=H4XC-U9RX-D24D-LUC8-Y9D3
      - USERNAME=admin
      - PASSWORD=admin
    deploy:
      resources:
        limits:
          cpus: '4.00'
          memory: 8g
    #restart: unless-stopped
networks:
  swag:
    ipam:
      config:
        - subnet: $SWAG_NETWORK
  servers:
    ipam:
      config:
        - subnet: $SERVERS_NETWORK